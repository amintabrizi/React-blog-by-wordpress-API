{"version":3,"sources":["axios/axios.js","Components/SinglePageComponent.js"],"names":["blogAPI","axios","create","baseURL","interceptors","request","use","config","err","Promise","reject","response","SinglePageComponent","props","params","useParams","useState","loading","setLoading","pageItems","setPageItems","PageSlug","id","useEffect","isMounted","Api","get","then","data","catch","console","log","className","map","page","authorURL","_embedded","author","link","replace","fimg_url","src","alt","title","rendered","dangerouslySetInnerHTML","__html","content","date","href","name"],"mappings":"6FAAA,YAEMA,EAFN,OAEgBC,EAAMC,OAAO,CACzBC,QAAS,kDAIbH,EAAQI,aAAaC,QAAQC,KAAI,SAASC,GAGtC,OAAOA,KACP,SAASC,GAGT,OAAOC,QAAQC,OAAOF,MAG1BR,EAAQI,aAAaO,SAASL,KAAI,SAASK,GAGvC,OAAOA,KACT,SAASH,GAIP,OAAOC,QAAQC,OAAOF,MAIXR,O,gFC6CAY,UAtEf,SAA6BC,GAEzB,IAAMC,EAASC,cAFiB,EAIFC,qBAJE,mBAIzBC,EAJyB,KAIhBC,EAJgB,OAMEF,mBAAS,IANX,mBAMzBG,EANyB,KAMdC,EANc,KAQ1BC,EAAWP,EAAOQ,GAkBxB,OAhBAC,qBAAU,WACNL,GAAW,GACX,IAAIM,GAAY,EAWhB,OAVAC,IAAIC,IAAJ,4BAA6BZ,EAAOQ,GAApC,YACKK,MACG,SAAAhB,GACIO,GAAW,GACPM,GACAJ,EAAaT,EAASiB,SAIjCC,OAAM,SAAArB,GAAG,OAAIsB,QAAQC,IAAIvB,MACvB,WAAQgB,GAAY,KAC5B,CAACH,EAAUP,EAAOQ,KAGjB,qBAAKU,UAAU,WAAf,SAEQf,EAEI,qBAAKe,UAAU,qEAAf,SACI,sBAAKA,UAAU,eAAf,UAA8B,wBAAW,wBAAW,6BAGxD,mCAEQb,EAAUc,KAAI,SAAAC,GACV,IAAIC,EAAYD,EAAKE,UAAUC,OAAO,GAAGC,KAGzC,OADAH,EAAYA,EAAUI,QAAQ,2CAA4C,IAEtE,sBAAmBP,UAAU,YAA7B,UAEQE,EAAKM,SAED,qBAAKR,UAAU,eAAeS,IAAKP,EAAKM,SAAUE,IAAI,MAEtD,GAER,sBAAKV,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,SAA4BE,EAAKS,MAAMC,WACvC,qBAAKC,wBAAyB,CAAEC,OAAQZ,EAAKa,QAAQH,eAEzD,sBAAKZ,UAAU,yBAAf,uBACeE,EAAKc,KADpB,MAEZ,oBAAGC,KAAMd,EAAT,cAAsBD,EAAKE,UAAUC,OAAO,GAAGa,aAd7BhB,EAAKZ","file":"static/js/8.a8bf7737.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst blogAPI = axios.create({\r\n    baseURL: 'https://hamyaredigi.ir/amin/index.php/wp-json',\r\n    //timeout: 5000,\r\n})\r\n\r\nblogAPI.interceptors.request.use(function(config) {\r\n    //console.log('test request');\r\n    //ghab az return mitoonid functioni ro ejra konid\r\n    return config;\r\n} , function(err) {\r\n    // handle error\r\n    //console.log('test request error');\r\n    return Promise.reject(err)\r\n})\r\n\r\nblogAPI.interceptors.response.use(function(response) {\r\n    //ghab az return mitoonid functioni ro ejra konid\r\n    //console.log('test response');\r\n    return response;\r\n},function(err) {\r\n    // System log\r\n    //console.log('test response error');\r\n\r\n    return Promise.reject(err);\r\n})\r\n\r\n\r\nexport default blogAPI;","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport Api from '../axios/axios';\r\n\r\nfunction SinglePageComponent(props) {\r\n\r\n    const params = useParams();\r\n\r\n    const [loading, setLoading] = useState();\r\n\r\n    const [pageItems, setPageItems] = useState([]);\r\n\r\n    const PageSlug = params.id;\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        let isMounted = true;\r\n        Api.get(`/wp/v2/pages?slug=${params.id}&_embed`)\r\n            .then(\r\n                response => {\r\n                    setLoading(false);\r\n                    if (isMounted) {\r\n                        setPageItems(response.data)\r\n                    }\r\n                }\r\n            )\r\n            .catch(err => console.log(err))\r\n        return () => { isMounted = false }; // use effect cleanup to set flag false, if unmounted\r\n    }, [PageSlug, params.id])\r\n\r\n    return (\r\n        <div className=\"col-md-8\">\r\n            {\r\n                loading\r\n                    ?\r\n                    <div className=\"d-flex  min-vh-100 w-100 justify-content-center align-items-center\">\r\n                        <div className=\"lds-facebook\"><div></div><div></div><div></div></div>\r\n                    </div>\r\n                    :\r\n                    <>\r\n                        {\r\n                            pageItems.map(page => {\r\n                                let authorURL = page._embedded.author[0].link;\r\n\r\n                                authorURL = authorURL.replace(\"http://127.0.0.1/wordpress/wp-json/wp/v2\", \"\")\r\n                                return (\r\n                                    <div key={page.id} className=\"card mb-4\">\r\n                                        {\r\n                                            page.fimg_url\r\n                                                ?\r\n                                                <img className=\"card-img-top\" src={page.fimg_url} alt=\"1\" />\r\n                                                :\r\n                                                ''\r\n                                        }\r\n                                        <div className=\"card-body\">\r\n                                            <h2 className=\"card-title\">{page.title.rendered}</h2>\r\n                                            <div dangerouslySetInnerHTML={{ __html: page.content.rendered }} />\r\n                                        </div>\r\n                                        <div className=\"card-footer text-muted\">\r\n                                            posted on {page.date} by\r\n                            <a href={authorURL}> {page._embedded.author[0].name}</a>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </>\r\n            }\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default SinglePageComponent;"],"sourceRoot":""}